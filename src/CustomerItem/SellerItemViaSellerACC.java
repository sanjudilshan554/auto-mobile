
package CustomerItem;

import static CustomerItem.AllItemtoShopping.id;
import static CustomerItem.AllItemtoShopping.user;
import com.mysql.cj.protocol.Resultset;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class SellerItemViaSellerACC extends javax.swing.JFrame {

   
    Statement stmt=null;
    Connection con=null;
    ResultSet rs=null;
    
    public SellerItemViaSellerACC() {
        initComponents();
        con=databaseConnection.Connect();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        transport = new javax.swing.JTextField();
        Savek = new com.k33ptoo.components.KButton();
        Update = new com.k33ptoo.components.KButton();
        Deletek = new com.k33ptoo.components.KButton();
        ResetK = new com.k33ptoo.components.KButton();
        DetailK = new com.k33ptoo.components.KButton();
        Back = new com.k33ptoo.components.KButton();
        Cansel = new com.k33ptoo.components.KButton();
        kButton8 = new com.k33ptoo.components.KButton();
        boxcatagory = new javax.swing.JComboBox<>();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        imageicon = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        ids = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        imageicons = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        select = new com.k33ptoo.components.KButton();
        jLabel15 = new javax.swing.JLabel();
        brand = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        aviliability = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        sid = new javax.swing.JTextField();
        txtNOI = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel2.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkStartColor(new java.awt.Color(204, 204, 204));
        kGradientPanel2.setPreferredSize(new java.awt.Dimension(1920, 1080));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Seller id");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel8.setText("Item Name");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel9.setText("Price");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel10.setText("Transport");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel11.setText("Item Catagory");

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel12.setText("IN Seller ACC");

        id.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        id.setToolTipText("When save auto genarate");
        id.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        id.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        id.setMinimumSize(new java.awt.Dimension(10, 29));
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        txtname.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 11)); // NOI18N
        txtname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        txtname.setMinimumSize(new java.awt.Dimension(10, 29));

        price.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 11)); // NOI18N
        price.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        price.setMinimumSize(new java.awt.Dimension(10, 29));

        transport.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 11)); // NOI18N
        transport.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        transport.setMinimumSize(new java.awt.Dimension(10, 29));
        transport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transportActionPerformed(evt);
            }
        });

        Savek.setBorder(null);
        Savek.setText("Save");
        Savek.setToolTipText("Create new item");
        Savek.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        Savek.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        Savek.setkSelectedColor(new java.awt.Color(0, 102, 51));
        Savek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavekActionPerformed(evt);
            }
        });

        Update.setBorder(null);
        Update.setText("Update");
        Update.setToolTipText("Update item detail");
        Update.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        Update.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        Update.setkSelectedColor(new java.awt.Color(0, 102, 51));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Deletek.setBorder(null);
        Deletek.setText("Delete");
        Deletek.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        Deletek.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        Deletek.setkSelectedColor(new java.awt.Color(0, 102, 51));
        Deletek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletekActionPerformed(evt);
            }
        });

        ResetK.setBorder(null);
        ResetK.setText("Reset");
        ResetK.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        ResetK.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        ResetK.setkSelectedColor(new java.awt.Color(0, 102, 51));
        ResetK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetKActionPerformed(evt);
            }
        });

        DetailK.setBorder(null);
        DetailK.setText("View Detail");
        DetailK.setToolTipText("View All item details");
        DetailK.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        DetailK.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        DetailK.setkSelectedColor(new java.awt.Color(0, 102, 51));
        DetailK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailKActionPerformed(evt);
            }
        });

        Back.setBorder(null);
        Back.setText("Back");
        Back.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        Back.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        Back.setkSelectedColor(new java.awt.Color(0, 102, 51));
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Cansel.setBorder(null);
        Cansel.setText("Cansel");
        Cansel.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        Cansel.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        Cansel.setkSelectedColor(new java.awt.Color(0, 102, 51));
        Cansel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CanselActionPerformed(evt);
            }
        });

        kButton8.setBorder(null);
        kButton8.setText("Search from item id");
        kButton8.setToolTipText("Search and fill fields with item id");
        kButton8.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton8.setkHoverStartColor(new java.awt.Color(0, 102, 0));
        kButton8.setkSelectedColor(new java.awt.Color(0, 102, 51));
        kButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton8ActionPerformed(evt);
            }
        });

        boxcatagory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Side Skirts", "Fuel tank door", "Instrumetn panel", "Protective Side trims on door panels", "Seat Upholsery", "Window frames", "SIde view mirrors", "Wheel rims and hub caps", "Bumpers", "Enginer gaskets", "Headlamps", "Air vents", "Dashboard", "Door switchd panels", "Spoiler", "Parking sensor", "Boot bottom panel" }));

        kGradientPanel1.setkEndColor(new java.awt.Color(120, 255, 214));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 121, 145));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Items");

        user.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        user.setBorder(null);
        user.setOpaque(false);

        ids.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        ids.setBorder(null);
        ids.setOpaque(false);
        ids.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idsActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Reg No : ");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pngwing.com (4) (1).png"))); // NOI18N

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(kGradientPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ids, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                            .addComponent(user)
                            .addGap(71, 71, 71)))
                    .addComponent(imageicons, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(imageicon, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(imageicon, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imageicons, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ids, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(jLabel24))
        );

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 153, 153));
        jLabel14.setText("Admin mode");

        select.setBorder(null);
        select.setText("Item image");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel15.setText("Availability");

        brand.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 11)); // NOI18N
        brand.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        brand.setMinimumSize(new java.awt.Dimension(10, 29));
        brand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel16.setText("Brand");

        aviliability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "Not Now" }));

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Item id");

        sid.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        sid.setText("Auto fill by the system from requestID");
        sid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        sid.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        sid.setMinimumSize(new java.awt.Dimension(10, 29));
        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });

        txtNOI.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 11)); // NOI18N
        txtNOI.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        txtNOI.setMinimumSize(new java.awt.Dimension(10, 29));
        txtNOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNOIActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel18.setText("No of item");

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Cansel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(195, 195, 195)
                                .addComponent(jLabel14))))
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel19)
                            .addComponent(jLabel7)
                            .addComponent(jLabel18))
                        .addGap(104, 104, 104)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(transport, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxcatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aviliability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNOI, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ResetK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DetailK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(Savek, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Deletek, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14))
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addGap(6, 33, Short.MAX_VALUE)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(kButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DetailK, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResetK, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kGradientPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(transport, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(boxcatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(13, 13, 13)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(aviliability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNOI, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Savek, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deletek, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cansel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SavekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavekActionPerformed
        try {
            stmt=con.createStatement();
            String itemName,Transport,Catagory,Brand,Availability;
            
            double Price=Double.parseDouble(price.getText());
            int Sid=Integer.parseInt((sid.getText()));
            int noi=Integer.parseInt(txtNOI.getText());
            //int bid=Integer.parsenInt(id.getText());
            
            
            itemName=txtname.getText();
            Transport=transport.getText();
            Catagory=(String) boxcatagory.getSelectedItem();
            Brand=brand.getText();
            Availability=(String) aviliability.getSelectedItem();
            
            
            String query="insert into items(sid,itemName,price,Transport,Catagory,Brand,Availability,numberofitem,image) values (?,?,?,?,?,?,?,?,?)";
            PreparedStatement praparedStmt=con.prepareStatement(query);

            praparedStmt.setInt(1,Sid);
            praparedStmt.setString(2,itemName);
            praparedStmt.setDouble(3,Price);
            praparedStmt.setString(4,Transport);
            praparedStmt.setString(5,Catagory);
            praparedStmt.setString(6, Brand);
            praparedStmt.setString(7,Availability);
            praparedStmt.setInt(8,noi);
            praparedStmt.setBytes(9,photo);

            praparedStmt.execute();
            JOptionPane.showMessageDialog(null, "Save Successfully");

        } catch (SQLException ex) {
            Logger.getLogger(Buy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SavekActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        try {

            String itemName,Transport,Catagory,Brand,Availability;
            
            double Price=Double.parseDouble(price.getText());
            
            int Stid=Integer.parseInt(sid.getText());
            
            int Itid=Integer.parseInt(id.getText());

            itemName=txtname.getText();
            Transport=transport.getText();
            Catagory=(String) boxcatagory.getSelectedItem();
            Brand=brand.getText();
            Availability=(String) aviliability.getSelectedItem();

            String quary="update items set sid=?,itemName=?,price=?,Transport=?,Catagory=?,Brand=?,Availability=? where id=?";

            PreparedStatement pprstmt=con.prepareStatement(quary);

            pprstmt.setInt(1,Stid);
            pprstmt.setString(2,itemName);
            pprstmt.setDouble(3,Price);
            pprstmt.setString(4,Transport);
            pprstmt.setString(5,Catagory);
            pprstmt.setString(6, Brand);
            pprstmt.setString(7, Availability);
            pprstmt.setInt(8,Itid);
            
            pprstmt.executeUpdate();
            JOptionPane.showMessageDialog(this,"Recode update successfully");

        } catch (SQLException ex) {
            Logger.getLogger(Buy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeletekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletekActionPerformed
        try {
            stmt=con.createStatement();

            String query="delete from items where id =?";
            PreparedStatement pprstmt=con.prepareStatement(query);

            int bid=Integer.parseInt(id.getText());
            pprstmt.setInt(1,bid);

            pprstmt.executeUpdate();

            JOptionPane.showMessageDialog(this,"Recode Delete successfully");
            //reset();

        } catch (SQLException ex) {
            Logger.getLogger(Buy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeletekActionPerformed

    private void ResetKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetKActionPerformed
      reset();
    }//GEN-LAST:event_ResetKActionPerformed

    public void reset(){
        sid.setText("");
        sid.setText("");
        txtname.setText("");
        price.setText("");
        transport.setText("");
        brand.setText("");
        
    }
    private void DetailKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailKActionPerformed
        
        AllItemsDetails ap=new AllItemsDetails();
        setVisible(false);
        ap.setVisible(true);
        
        
        
        ap.user.setText(user.getText());
        
        int i=Integer.parseInt(ids.getText());
        ap.id.setText(Integer.toString(i));
        
        int snow=Integer.parseInt(sid.getText());
        ap.sellerid.setText(Integer.toString(snow));
                
        ap.setVisible(true);
        
    }//GEN-LAST:event_DetailKActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        requestsID h=new requestsID();
        h.setVisible(true);
        
        if(!user.getText().equals("AdminSelling@123")){ //and also buyer account id should check that
        setVisible(false);
        
        h.user.setText(user.getText());
        
        int i=Integer.parseInt(ids.getText());
        h.id.setText(Integer.toString(i));
        
        h.setVisible(true);
        
        }
    }//GEN-LAST:event_BackActionPerformed

    private void CanselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CanselActionPerformed
        int responce = JOptionPane.showConfirmDialog(this,"Do you want to exit from the system","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(responce == JOptionPane.YES_OPTION){
            System.exit(0);
        }
        else{
            setVisible(true);
        }
    }//GEN-LAST:event_CanselActionPerformed

    private void kButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton8ActionPerformed
       try {
          stmt=con.createStatement();// this auto create try catch
          
          int Iid=Integer.parseInt(id.getText());
          
          String quary="select * from items";
          
          rs=stmt.executeQuery(quary);
          
          while(rs.next()){
              
              if(Iid==rs.getInt("id")){
                 
                  sid.setText(rs.getString("sid"));
                  txtname.setText(rs.getString("itemName"));
                  price.setText(rs.getString("price"));
                  transport.setText(rs.getString("Transport"));
                  boxcatagory.setSelectedItem(rs.getString("Catagory"));
                  transport.setText(rs.getString("Brand"));
                  aviliability.setSelectedItem(rs.getString("Availability"));
                  brand.setText(rs.getString("Brand"));
                  txtNOI.setText(rs.getString("numberofitem"));
                  
                  
                  BufferedImage image=ImageIO.read(rs.getBinaryStream("image"));
                  imageicons.setIcon(new ImageIcon(image));
              }
          
          }
          
      } catch (SQLException ex) {
          Logger.getLogger(Buy.class.getName()).log(Level.SEVERE, null, ex);
      } catch (IOException ex) { 
            Logger.getLogger(SellerItemViaSellerACC.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_kButton8ActionPerformed

    private void transportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transportActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed

        JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        File file=chooser.getSelectedFile();
        imageicons.setIcon(new ImageIcon(file.toString()));
        filename=file.getAbsolutePath();

        try{
            File image=new File(filename);
            FileInputStream fis=new FileInputStream(image);
            ByteArrayOutputStream bos=new ByteArrayOutputStream();
            byte[] buf=new byte [1024];

            for(int readnum; (readnum=fis.read(buf)) !=-1;){
                bos.write(buf,0,readnum);
            }
            photo =bos.toByteArray();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_selectActionPerformed

    private void brandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brandActionPerformed

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sidActionPerformed

    private void idsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idsActionPerformed

    private void txtNOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNOIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNOIActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellerItemViaSellerACC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton Back;
    private com.k33ptoo.components.KButton Cansel;
    private com.k33ptoo.components.KButton Deletek;
    private com.k33ptoo.components.KButton DetailK;
    private com.k33ptoo.components.KButton ResetK;
    private com.k33ptoo.components.KButton Savek;
    private com.k33ptoo.components.KButton Update;
    private javax.swing.JComboBox<String> aviliability;
    private javax.swing.JComboBox<String> boxcatagory;
    private javax.swing.JTextField brand;
    private javax.swing.JTextField id;
    public static javax.swing.JTextField ids;
    private javax.swing.JLabel imageicon;
    private javax.swing.JLabel imageicons;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.k33ptoo.components.KButton kButton8;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    private javax.swing.JTextField price;
    private com.k33ptoo.components.KButton select;
    public static javax.swing.JTextField sid;
    private javax.swing.JTextField transport;
    private javax.swing.JTextField txtNOI;
    private javax.swing.JTextField txtname;
    public static javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
    byte[] photo=null;
    String filename=null;
}
